digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	1 [color="#ff0200", fontcolor="#ffffff", fontsize="10.00", label="main\n99.82%\n(0.00%)"];
	1 -> 2 [arrowsize="0.73", color="#22bb09", fontcolor="#22bb09", fontsize="10.00", label="53.55%\n2×", labeldistance="2.14", penwidth="2.14"];
	1 -> 6 [arrowsize="0.64", color="#0baa41", fontcolor="#0baa41", fontsize="10.00", label="41.54%\n1×", labeldistance="1.66", penwidth="1.66"];
	1 -> 17 [arrowsize="0.35", color="#0d1e78", fontcolor="#0d1e78", fontsize="10.00", label="4.03%\n1×", labeldistance="0.50", penwidth="0.50"];
	2 [color="#22bb09", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::DynamicDecoderX::process(Bavieca::MatrixBase<float>&)\n53.55%\n(0.00%)\n2×"];
	2 -> 3 [arrowsize="0.72", color="#15b809", fontcolor="#15b809", fontsize="10.00", label="51.72%\n1876×", labeldistance="2.07", penwidth="2.07"];
	2 -> 30 [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.82%\n1876×", labeldistance="0.50", penwidth="0.50"];
	3 [color="#15b809", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::DynamicDecoderX::expand(Bavieca::VectorBase<float>&, int)\n51.72%\n(2.61%)\n1876×"];
	3 -> 4 [arrowsize="0.35", color="#0d4181", fontcolor="#0d4181", fontsize="10.00", label="11.23%\n5063348×", labeldistance="0.50", penwidth="0.50"];
	3 -> 8 [arrowsize="0.47", color="#0c7e8f", fontcolor="#0c7e8f", fontsize="10.00", label="21.75%\n8789420×", labeldistance="0.87", penwidth="0.87"];
	3 -> 9 [arrowsize="0.40", color="#0c5c88", fontcolor="#0c5c88", fontsize="10.00", label="16.06%\n5148253×", labeldistance="0.64", penwidth="0.64"];
	4 [color="#0aab3d", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::HMMStateDecoding::computeEmissionProbability(float*, int)\n42.16%\n(0.14%)\n19002951×"];
	4 -> 5 [arrowsize="0.65", color="#0aab3e", fontcolor="#0aab3e", fontsize="10.00", label="42.02%\n19002951×", labeldistance="1.68", penwidth="1.68"];
	5 [color="#0aab3e", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::HMMStateDecoding::computeEmissionProbabilityNearestNeighborSSE(float*, int)\n42.02%\n(41.24%)\n19002951×"];
	5 -> 51 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.78%\n113102000×", labeldistance="0.50", penwidth="0.50"];
	6 [color="#0baa41", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LMManager::load()\n41.54%\n(0.00%)\n1×"];
	6 -> 7 [arrowsize="0.53", color="#0c9787", fontcolor="#0c9787", fontsize="10.00", label="28.00%\n1×", labeldistance="1.12", penwidth="1.12"];
	6 -> 10 [arrowsize="0.37", color="#0d4d84", fontcolor="#0d4d84", fontsize="10.00", label="13.53%\n1×", labeldistance="0.54", penwidth="0.54"];
	7 [color="#0c9787", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LMFSM::build(Bavieca::LMARPA*)\n28.00%\n(1.21%)\n1×"];
	7 -> 11 [arrowsize="0.35", color="#0d4181", fontcolor="#0d4181", fontsize="10.00", label="11.15%\n1×", labeldistance="0.50", penwidth="0.50"];
	7 -> 18 [arrowsize="0.35", color="#0d1e78", fontcolor="#0d1e78", fontsize="10.00", label="3.94%\n1×", labeldistance="0.50", penwidth="0.50"];
	7 -> 20 [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.24%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	7 -> 22 [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.02%\n9992908×", labeldistance="0.50", penwidth="0.50"];
	7 -> 33 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.56%\n13479890×", labeldistance="0.50", penwidth="0.50"];
	7 -> 35 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.45%\n1×", labeldistance="0.50", penwidth="0.50"];
	7 -> 43 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.06%\n9941309×", labeldistance="0.50", penwidth="0.50"];
	7 -> 50 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.17%\n13479888×", labeldistance="0.50", penwidth="0.50"];
	8 [color="#0c7e8f", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::DynamicDecoderX::expandToHMM(Bavieca::_DNode*, Bavieca::_DArc*, Bavieca::VectorBase<float>&, int)\n21.75%\n(2.16%)\n8789420×"];
	8 -> 4 [arrowsize="0.44", color="#0c708c", fontcolor="#0c708c", fontsize="10.00", label="19.50%\n8789420×", labeldistance="0.78", penwidth="0.78"];
	9 [color="#0c5c88", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::DynamicDecoderX::expandToHMMNewWord(Bavieca::_DNode*, Bavieca::_DArc*, Bavieca::LexUnit*, Bavieca::LMTransition*, Bavieca::VectorBase<float>&, int)\n16.06%\n(1.21%)\n5148253×"];
	9 -> 4 [arrowsize="0.35", color="#0d4281", fontcolor="#0d4281", fontsize="10.00", label="11.42%\n5148253×", labeldistance="0.50", penwidth="0.50"];
	9 -> 19 [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.20%\n4943070×", labeldistance="0.50", penwidth="0.50"];
	10 [color="#0d4d84", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LMARPA::load()\n13.53%\n(1.40%)\n1×"];
	10 -> 13 [arrowsize="0.35", color="#0d287b", fontcolor="#0d287b", fontsize="10.00", label="6.11%\n16517753×", labeldistance="0.50", penwidth="0.50"];
	10 -> 14 [arrowsize="0.35", color="#0d2279", fontcolor="#0d2279", fontsize="10.00", label="5.01%\n16517753×", labeldistance="0.50", penwidth="0.50"];
	11 [color="#0d4181", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LMFSM::compact(Bavieca::LMStateTemp*, int, int, Bavieca::LMStateTemp*, Bavieca::LMStateTemp*)\n11.15%\n(1.77%)\n1×"];
	11 -> 12 [arrowsize="0.35", color="#0d327d", fontcolor="#0d327d", fontsize="10.00", label="8.20%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	11 -> 50 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.17%\n13428291×", labeldistance="0.50", penwidth="0.50"];
	11 -> 57 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.72%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	12 [color="#0d327d", fontcolor="#ffffff", fontsize="10.00", label="void std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::sort<bool (*)(Bavieca::_LMArcTemp const*, Bavieca::_LMArcTemp const*)>(bool (*)(Bavieca::_LMArcTemp const*, Bavieca::_LMArcTemp const*))\n8.20%\n(0.94%)\n3486982×"];
	12 -> 23 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.05%\n49227295×", labeldistance="0.50", penwidth="0.50"];
	12 -> 24 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.05%\n49227295×", labeldistance="0.50", penwidth="0.50"];
	12 -> 27 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.90%\n7266241×", labeldistance="0.50", penwidth="0.50"];
	12 -> 59 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.24%\n14423342×", labeldistance="0.50", penwidth="0.50"];
	12 -> 68 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.50%\n7211671×", labeldistance="0.50", penwidth="0.50"];
	13 [color="#0d287b", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LexiconManager::getLexUnitId(char const*)\n6.11%\n(0.43%)\n16517753×"];
	13 -> 15 [arrowsize="0.35", color="#0d2279", fontcolor="#0d2279", fontsize="10.00", label="4.97%\n16517753×", labeldistance="0.50", penwidth="0.50"];
	13 -> 63 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.59%\n16517753×", labeldistance="0.50", penwidth="0.50"];
	14 [color="#0d2279", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LMARPA::lexUnitToUpperCase(std::string&)\n5.01%\n(0.43%)\n16517753×"];
	14 -> 16 [arrowsize="0.35", color="#0d2079", fontcolor="#0d2079", fontsize="10.00", label="4.58%\n15988909×", labeldistance="0.50", penwidth="0.50"];
	15 [color="#0d2279", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<char const*, std::pair<char const* const, Bavieca::LexUnitX*>, std::allocator<std::pair<char const* const, Bavieca::LexUnitX*> >, std::_Select1st<std::pair<char const* const, Bavieca::LexUnitX*> >, Bavieca::MLexUnitFunctions, Bavieca::MLexUnitFunctions, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::find(char const* const&)\n4.99%\n(0.70%)\n16588659×"];
	15 -> 25 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.03%\n16588659×", labeldistance="0.50", penwidth="0.50"];
	15 -> 32 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.62%\n16588659×", labeldistance="0.50", penwidth="0.50"];
	16 [color="#0d2079", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<char*, std::string> std::transform<__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, int (*)(int)>(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, int (*)(int))\n4.58%\n(1.46%)\n15988909×"];
	16 -> 39 [arrowsize="0.35", color="#0d1275", fontcolor="#0d1275", fontsize="10.00", label="1.38%\n106293102×", labeldistance="0.50", penwidth="0.50"];
	16 -> 48 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.88%\n180608386×", labeldistance="0.50", penwidth="0.50"];
	16 -> 49 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.86%\n180608386×", labeldistance="0.50", penwidth="0.50"];
	17 [color="#0d1e78", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::NetworkBuilderX::build()\n4.03%\n(0.08%)\n1×"];
	17 -> 41 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.22%\n3×", labeldistance="0.50", penwidth="0.50"];
	17 -> 54 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.81%\n1×", labeldistance="0.50", penwidth="0.50"];
	17 -> 62 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.59%\n3×", labeldistance="0.50", penwidth="0.50"];
	18 [color="#0d1e78", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LMFSM::checkConnected(Bavieca::LMStateTemp*, Bavieca::LMStateTemp*, Bavieca::LMStateTemp*, int, int)\n3.94%\n(1.52%)\n1×"];
	18 -> 45 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.98%\n6454329×", labeldistance="0.50", penwidth="0.50"];
	18 -> 50 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.17%\n13428291×", labeldistance="0.50", penwidth="0.50"];
	18 -> 64 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.57%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	19 [color="#0d1a77", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LMFSM::updateLMState(int, int, float*)\n3.20%\n(3.20%)\n4947033×"];
	20 [color="#0d1a77", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::insert(std::pair<std::string const, Bavieca::LMStateTemp*> const&)\n3.24%\n(0.00%)\n3486982×"];
	20 -> 21 [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.24%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	21 [color="#0d1a77", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::_M_insert(std::pair<std::string const, Bavieca::LMStateTemp*> const&, std::tr1::integral_constant<bool, true>)\n3.24%\n(0.78%)\n3486982×"];
	21 -> 26 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.99%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	21 -> 46 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.25%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	22 [color="#0d1a77", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::find(std::string const&)\n3.02%\n(1.81%)\n9992908×"];
	22 -> 46 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.73%\n9992908×", labeldistance="0.50", penwidth="0.50"];
	23 [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::list()\n2.20%\n(0.37%)\n52765874×"];
	23 -> 31 [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.83%\n52765874×", labeldistance="0.50", penwidth="0.50"];
	24 [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::~list()\n2.20%\n(0.33%)\n52765874×"];
	24 -> 28 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.87%\n52765874×", labeldistance="0.50", penwidth="0.50"];
	25 [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::__detail::_Hash_code_base<char const*, std::pair<char const* const, Bavieca::LexUnitX*>, std::_Select1st<std::pair<char const* const, Bavieca::LexUnitX*> >, Bavieca::MLexUnitFunctions, Bavieca::MLexUnitFunctions, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>::_M_hash_code(char const* const&) const\n2.03%\n(0.18%)\n16608642×"];
	25 -> 29 [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.84%\n16608642×", labeldistance="0.50", penwidth="0.50"];
	26 [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::_M_insert_bucket(std::pair<std::string const, Bavieca::LMStateTemp*> const&, unsigned long, unsigned long)\n1.99%\n(0.18%)\n3486982×"];
	26 -> 44 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.05%\n18×", labeldistance="0.50", penwidth="0.50"];
	27 [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="void std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::merge<bool (*)(Bavieca::_LMArcTemp const*, Bavieca::_LMArcTemp const*)>(std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >&, bool (*)(Bavieca::_LMArcTemp const*, Bavieca::_LMArcTemp const*))\n1.90%\n(0.57%)\n7266241×"];
	27 -> 50 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.19%\n14532482×", labeldistance="0.50", penwidth="0.50"];
	27 -> 59 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.24%\n14532482×", labeldistance="0.50", penwidth="0.50"];
	27 -> 66 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.34%\n65308998×", labeldistance="0.50", penwidth="0.50"];
	28 [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="std::_List_base<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::~_List_base()\n1.87%\n(0.29%)\n52765874×"];
	28 -> 55 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.80%\n52765874×", labeldistance="0.50", penwidth="0.50"];
	28 -> 56 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.78%\n52765874×", labeldistance="0.50", penwidth="0.50"];
	29 [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::MLexUnitFunctions::operator()(char const*) const\n1.85%\n(1.85%)\n16638421×"];
	30 [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::DynamicDecoderX::pruning()\n1.82%\n(1.77%)\n1876×"];
	31 [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="std::_List_base<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::_List_base()\n1.83%\n(0.21%)\n52765874×"];
	31 -> 42 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.19%\n52765874×", labeldistance="0.50", penwidth="0.50"];
	32 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<char const*, std::pair<char const* const, Bavieca::LexUnitX*>, std::allocator<std::pair<char const* const, Bavieca::LexUnitX*> >, std::_Select1st<std::pair<char const* const, Bavieca::LexUnitX*> >, Bavieca::MLexUnitFunctions, Bavieca::MLexUnitFunctions, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::_M_find_node(std::tr1::__detail::_Hash_node<std::pair<char const* const, Bavieca::LexUnitX*>, false>*, char const* const&, unsigned long) const\n1.62%\n(0.35%)\n16608642×"];
	32 -> 40 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.27%\n46281318×", labeldistance="0.50", penwidth="0.50"];
	33 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LMFSM::hashKey(Bavieca::_NGram*, bool, int)\n1.56%\n(1.56%)\n13479890×"];
	34 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::~_Hashtable()\n1.45%\n(0.00%)\n1×"];
	34 -> 38 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.45%\n1×", labeldistance="0.50", penwidth="0.50"];
	35 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::unordered_map<std::string, Bavieca::LMStateTemp*, std::tr1::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> > >::~unordered_map()\n1.45%\n(0.00%)\n1×"];
	35 -> 36 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.45%\n1×", labeldistance="0.50", penwidth="0.50"];
	36 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::__unordered_map<std::string, Bavieca::LMStateTemp*, std::tr1::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, false>::~__unordered_map()\n1.45%\n(0.00%)\n1×"];
	36 -> 34 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.45%\n1×", labeldistance="0.50", penwidth="0.50"];
	37 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::_M_deallocate_nodes(std::tr1::__detail::_Hash_node<std::pair<std::string const, Bavieca::LMStateTemp*>, false>**, unsigned long)\n1.45%\n(1.35%)\n1×"];
	38 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::clear()\n1.45%\n(0.00%)\n1×"];
	38 -> 37 [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.45%\n1×", labeldistance="0.50", penwidth="0.50"];
	39 [color="#0d1275", fontcolor="#ffffff", fontsize="10.00", label="bool __gnu_cxx::operator!=<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&)\n1.38%\n(1.09%)\n106293102×"];
	40 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::__detail::_Hash_code_base<char const*, std::pair<char const* const, Bavieca::LexUnitX*>, std::_Select1st<std::pair<char const* const, Bavieca::LexUnitX*> >, Bavieca::MLexUnitFunctions, Bavieca::MLexUnitFunctions, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>::_M_compare(char const* const&, unsigned long, std::tr1::__detail::_Hash_node<std::pair<char const* const, Bavieca::LexUnitX*>, false>*) const\n1.27%\n(0.84%)\n46281318×"];
	41 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::NetworkBuilderX::mergeBackward()\n1.22%\n(0.60%)\n3×"];
	42 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="std::_List_base<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::_List_impl::_List_impl()\n1.19%\n(0.78%)\n52765874×"];
	43 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::push_back(Bavieca::_LMArcTemp* const&)\n1.06%\n(0.04%)\n9941309×"];
	43 -> 47 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.90%\n9941309×", labeldistance="0.50", penwidth="0.50"];
	43 -> 50 [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.13%\n9941309×", labeldistance="0.50", penwidth="0.50"];
	44 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::_M_rehash(unsigned long)\n1.05%\n(0.74%)\n18×"];
	45 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::LexiconManager::isStandard(int)\n0.98%\n(0.35%)\n6454329×"];
	46 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::allocator<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::_M_find_node(std::tr1::__detail::_Hash_node<std::pair<std::string const, Bavieca::LMStateTemp*>, false>*, std::string const&, unsigned long) const\n0.99%\n(0.16%)\n13479890×"];
	46 -> 53 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.82%\n17545915×", labeldistance="0.50", penwidth="0.50"];
	47 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::_M_insert(std::_List_iterator<Bavieca::_LMArcTemp*>, Bavieca::_LMArcTemp* const&)\n0.90%\n(0.06%)\n9941309×"];
	47 -> 52 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.83%\n9941309×", labeldistance="0.50", penwidth="0.50"];
	48 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<char*, std::string>::operator*() const\n0.88%\n(0.88%)\n180608386×"];
	49 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<char*, std::string>::operator++()\n0.86%\n(0.86%)\n180608386×"];
	50 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::end()\n0.84%\n(0.60%)\n64810261×"];
	51 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="float const& std::max<float>(float const&, float const&)\n0.84%\n(0.84%)\n121504100×"];
	52 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::_M_create_node(Bavieca::_LMArcTemp* const&)\n0.83%\n(0.25%)\n9941309×"];
	53 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::__detail::_Hash_code_base<std::string, std::pair<std::string const, Bavieca::LMStateTemp*>, std::_Select1st<std::pair<std::string const, Bavieca::LMStateTemp*> >, std::equal_to<std::string>, std::tr1::hash<std::string>, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, false>::_M_compare(std::string const&, unsigned long, std::tr1::__detail::_Hash_node<std::pair<std::string const, Bavieca::LMStateTemp*>, false>*) const\n0.82%\n(0.18%)\n17545915×"];
	53 -> 61 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.62%\n17545915×", labeldistance="0.50", penwidth="0.50"];
	54 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::NetworkBuilderX::pushWordLabels()\n0.81%\n(0.23%)\n1×"];
	55 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::_List_base<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::_M_clear()\n0.80%\n(0.43%)\n52765874×"];
	56 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::_List_base<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::_List_impl::~_List_impl()\n0.78%\n(0.39%)\n52765874×"];
	57 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::size() const\n0.72%\n(0.02%)\n3486982×"];
	57 -> 58 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.68%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	58 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::iterator_traits<std::_List_const_iterator<Bavieca::_LMArcTemp*> >::difference_type std::distance<std::_List_const_iterator<Bavieca::_LMArcTemp*> >(std::_List_const_iterator<Bavieca::_LMArcTemp*>, std::_List_const_iterator<Bavieca::_LMArcTemp*>)\n0.68%\n(0.02%)\n3486982×"];
	58 -> 60 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.66%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	59 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::begin()\n0.66%\n(0.51%)\n39468367×"];
	60 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="std::iterator_traits<std::_List_const_iterator<Bavieca::_LMArcTemp*> >::difference_type std::__distance<std::_List_const_iterator<Bavieca::_LMArcTemp*> >(std::_List_const_iterator<Bavieca::_LMArcTemp*>, std::_List_const_iterator<Bavieca::_LMArcTemp*>, std::input_iterator_tag)\n0.66%\n(0.18%)\n3486982×"];
	61 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="std::equal_to<std::string>::operator()(std::string const&, std::string const&) const\n0.62%\n(0.12%)\n17545915×"];
	62 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="Bavieca::NetworkBuilderX::mergeForward()\n0.59%\n(0.33%)\n3×"];
	63 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::_Hashtable<char const*, std::pair<char const* const, Bavieca::LexUnitX*>, std::allocator<std::pair<char const* const, Bavieca::LexUnitX*> >, std::_Select1st<std::pair<char const* const, Bavieca::LexUnitX*> >, Bavieca::MLexUnitFunctions, Bavieca::MLexUnitFunctions, std::tr1::__detail::_Mod_range_hashing, std::tr1::__detail::_Default_ranged_hash, std::tr1::__detail::_Prime_rehash_policy, false, false, true>::end()\n0.60%\n(0.25%)\n16652254×"];
	64 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::LMStateTemp*, std::allocator<Bavieca::LMStateTemp*> >::push_back(Bavieca::LMStateTemp* const&)\n0.57%\n(0.00%)\n3486982×"];
	64 -> 67 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.54%\n3486982×", labeldistance="0.50", penwidth="0.50"];
	65 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="std::tr1::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const\n0.57%\n(0.57%)\n34509166×"];
	66 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="std::_List_iterator<Bavieca::_LMArcTemp*>::operator!=(std::_List_iterator<Bavieca::_LMArcTemp*> const&) const\n0.55%\n(0.55%)\n105645468×"];
	67 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::LMStateTemp*, std::allocator<Bavieca::LMStateTemp*> >::_M_insert(std::_List_iterator<Bavieca::LMStateTemp*>, Bavieca::LMStateTemp* const&)\n0.54%\n(0.10%)\n3486982×"];
	68 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >::splice(std::_List_iterator<Bavieca::_LMArcTemp*>, std::list<Bavieca::_LMArcTemp*, std::allocator<Bavieca::_LMArcTemp*> >&, std::_List_iterator<Bavieca::_LMArcTemp*>)\n0.50%\n(0.18%)\n7211671×"];
}
